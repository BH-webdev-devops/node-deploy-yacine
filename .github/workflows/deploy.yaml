name: CI/CD Pipeline for Node App with GCP Deployment

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the application
      - name: Build the application
        run: npm run build

      # Optional Step: Start the server for testing (remove if not needed)
      - name: Start the server (if applicable)
        run: npm start &
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      # Step 5: Set up Google Cloud credentials
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Step 6: Configure gcloud CLI
      - name: Configure gcloud CLI
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker europe-wets1-docker.pkg.dev

      # Step 7: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/my-app .
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/my-app

      # Step 8: Deploy to Google Cloud Run
      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy my-app \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/my-app:$GITHUB_SHA \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated